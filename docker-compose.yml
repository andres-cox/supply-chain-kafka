version: '3.8'

services:
  base:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.base
    image: supply-chain-base:latest

  order-service:
    build:
      context: .
      dockerfile: order_service/Dockerfile
      args:
        BASE_IMAGE: supply-chain-base:latest
    depends_on:
      - base
      - kafka
    ports:
      - "8001:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - LOG_LEVEL=INFO
    volumes:
      - ./order_service:/app/order_service

  warehouse-service:
    build:
      context: .
      dockerfile: warehouse_service/Dockerfile
      args:
        BASE_IMAGE: supply-chain-base:latest
    depends_on:
      - base
      - kafka
    ports:
      - "8002:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - LOG_LEVEL=INFO
    volumes:
      - ./warehouse_service:/app/warehouse_service

  tracking-service:
    build:
      context: .
      dockerfile: tracking_service/Dockerfile
      args:
        BASE_IMAGE: supply-chain-base:latest
    depends_on:
      - base
      - kafka
    ports:
      - "8003:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - LOG_LEVEL=INFO
    volumes:
      - ./tracking_service:/app/tracking_service

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER